{"version":3,"sources":["submissionCtrl.js","animation.js","submissionManager.js","templates.js"],"names":["addScript","str","$","append","createInstance","name","commands","options","simulationInstance","tag","animationFeatures","selector","task","curCmd","textDisplayed","playModes","stopped","playing","paused","playMode","execCmd","cmd","cb","cmdName","cmdArgs","slice","pre","html","show","alert","execNextCmd","length","attr","noop","parseJSON","startCmd","click","hide","removeAttr","find","stop","displayMsg","angular","module","directive","restrict","scope","idtest","link","$scope","$elem","attrs","hasLoadedSimulation","e","console","error","$on","event","args","trigger","templateUrl","controller","$sce","getDiffHtmlFromLog","log","resSol","resExp","excerptRow","iRow","realdiffRow","diffRow","rowsSol","displayedSolutionOutput","split","rowsExp","displayedExpectedOutput","diffRowSol","diffCol","substring","Math","max","truncatedAfter","res","submissionManager","initConstants","showSubmission","showDetailsTests","hasLoadedAnim","SyncQueue","addSyncEndListeners","submission","idShown","initDetailsTests","configureLogsError","tests","task_sScriptAnimation","hasLoadedAnimation","loading","$broadcast","displayError","index","idTestToLog","nl2br","replace","toTrust","trustAsHtml","countTestsSucceeded","curSubtask","nbTestsSucceeded","iTest","submissionTests","iErrorCode","ERROR_NoError","hasFoundAnError","curTest","idApplied","submissionSubtasks","subtasks","subtask","cached","getStatusTest","isShown","ID","dataITest","getLog","evalFun","displayChecker","sLog","sLogParsed","JSON","parse","round","val","floor","firstCharDiff","inputStr","expectedStr","result","hasFoundError","pos","formatDate","date","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","toString","dayData","getImageAbsoluteUrl","idTask","md5","imageName","toLog","clickTest","idTest","arg","errorCode","this","ERROR_WrongAnswer","ERROR_AbortError","ERROR_BusError","ERROR_FloatingPointException","ERROR_SegFault","ERROR_TimeLimitExceeded","ERROR_TimeLimitExceededBis","ERROR_WrongAnswerBis","ERROR_ExecutionError","ERROR_WrongAnswerCheck","ERROR_StaticMemoryExceeded","ERROR_BusError35","ERROR_SegFault139","ERROR_RelativeScore","countSubtasksSucceeded","nbSubtasksSucceeded","bSuccess","getDataTest","status","classToApply","classImage","getClassTest","getClassImageTest","run","$templateCache","put"],"mappings":"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","file":"submission-manager.min.js","sourcesContent":["angular.module('submission-manager', []);\n\nangular.module('submission-manager').directive('animation', function()\n{\n   'use strict';\n   return {\n      restrict: 'EA',\n      //replace: true,\n      //transclude: true,\n      scope: {\n         idtest: '=',\n         commands: '='\n      },\n      link: function ($scope, $elem, attrs)\n      {\n         var hasLoadedSimulation = [];\n         hasLoadedSimulation[$scope.idtest] = false;\n         try {\n            $scope.commands = $.parseJSON($scope.commands);\n         } catch(e) {\n            console.error('can\\'t parse '+$scope.commands);\n         }\n         var selector = '#anim' + $scope.idtest + '';\n         $scope.$on(\"clickOnTest\", function (event, args)\n         {\n            if (args[0] == $scope.idtest && !hasLoadedSimulation[$scope.idtest])\n            {\n               hasLoadedSimulation[$scope.idtest] = true;\n               /*setTimeout( function() {\n               //$.getScript('animations/raphael-min.js', function() {\n                  //$.getScript('animations/animation.js', function () {\n                    // $.getScript('animations/anim_example.js', function() {\n                        simulationInstance(selector, animationFeatures(selector), $scope.commands);\n                     //});\n                  //});\n               //});\n               }, 1);*/\n               if (typeof animationFeatures !== 'undefined') {\n                  simulationInstance(selector, animationFeatures(selector), $scope.commands);\n               }\n               $('.restart').trigger('click');\n            }\n         });\n      },\n      templateUrl: 'submission-manager/anim.html'\n   };\n});\n\n// TODO: use eval\nfunction addScript (str)\n{\n   $('head').append('<script type=\"text/javascript\">' + str + '</script>');\n}\n\nangular.module('submission-manager').controller('submissionController', ['$scope', '$sce', function($scope, $sce)\n{\n   $scope.submissionManager = submissionManager;\n   $scope.submissionManager.initConstants($scope);\n\n//   $scope.loading = true;\n\n//   $scope.hasAskedSubmission = false;\n//   $scope.idShown = -1;\n\n//   $scope.submission = new Array();\n//   $scope.submission.subtasks = new Array();\n   $scope.showSubmission = true;\n   $scope.showDetailsTests = false; // Used when there are no subtasks.\n   $scope.hasLoadedAnim = false;\n\n   SyncQueue.addSyncEndListeners(\"submissionController.apply\", function () {\n      if ($scope.submission)\n      {\n         var idShown = $scope.initDetailsTests($scope.submission);\n         if (idShown !== -1)\n         {\n            $scope.idShown = idShown;\n         }\n         $scope.configureLogsError($scope.submission.tests);\n         if ($scope.submission.task_sScriptAnimation && !$scope.hasLoadedAnimation)\n         {\n            $scope.hasLoadedAnimation = true;\n            addScript($scope.submission.task_sScriptAnimation); // TODO: use eval instead?\n         }\n      }\n      $scope.loading = false;\n\n      if ($scope.idShown != -1 && $scope.submission)\n      {\n         if ($scope.submission.task_sScriptAnimation)\n         {\n            $scope.$broadcast(\"clickOnTest\", [$scope.idShown]);\n         }\n      }\n   });\n\n   $scope.displayError = function (index)\n   {\n      if ($scope.idTestToLog == -1 || $scope.idTestToLog == index)\n      {\n         $scope.idTestToLog = index;\n         return true;\n      }\n      else\n      {\n         return false;\n      }\n   };\n\n   $scope.nl2br = function (str) {\n      return (str + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1<br>$2');\n   };\n\n   $scope.toTrust = function(str)\n   {\n      return $sce.trustAsHtml(str);\n   };\n\n   $scope.countTestsSucceeded = function(curSubtask)\n   {\n      var nbTestsSucceeded = 0;\n      for (var iTest = 0; iTest < curSubtask.submissionTests.length; iTest++)\n      {\n         if (curSubtask.submissionTests[iTest].iErrorCode == $scope.ERROR_NoError)\n         {\n            nbTestsSucceeded++;\n         }\n      }\n      return nbTestsSucceeded;\n   };\n\n   $scope.initDetailsTests = function(submission)\n   {\n      var idApplied = -1;\n      var hasFoundAnError,iTest,curTest;\n      // If there are subtasks in this problem\n      if (submission.submissionSubtasks && submission.submissionSubtasks.length > 0)\n      {\n         var subtasks = submission.submissionSubtasks;\n         hasFoundAnError = false;\n         for (var curSubtask = 0; curSubtask < subtasks.length; curSubtask++)\n         {\n            var subtask = subtasks[curSubtask];\n\n            if (!subtask.cached) // If it is undefined, we set it.\n            {\n               subtask.cached = [];\n               subtask.cached.showDetailsTests = false;\n\n               for (iTest = 0; iTest < subtask.submissionTests.length; iTest++) // Nevertheless, if we find a test that has an error, we automatically display it\n               {\n                  curTest = subtask.submissionTests[iTest];\n                  curTest.cached = [];\n                  if (submissionManager.getStatusTest(curTest.iErrorCode) != 'ok' && !hasFoundAnError) // We'll automatically display both the subtask and the test\n                  {\n                     subtask.cached.showDetailsTests = true;\n                     curTest.cached.isShown = true;\n                     hasFoundAnError = true;\n                     idApplied = curTest.ID;\n                  }\n                  else\n                  {\n                     curTest.cached.isShown = false;\n                  }\n               }\n            }\n            else // Already set\n            {\n               hasFoundAnError = true;\n            }\n         }\n\n         if (!hasFoundAnError) // No error => we display both the first subtask and the first test\n         {\n            subtasks[0].cached.showDetailsTests = true;\n            if (subtasks[0].submissionTests.length > 0) // We make sure that some tests exist\n            {\n               subtasks[0].submissionTests[0].cached.isShown = true;\n               idApplied = subtasks[0].submissionTests[0].ID;\n            }\n         }\n      }\n      // If there are no subtasks\n\n      if ($scope.submission.submissionSubtasks.length === 0 && $scope.submission.tests.length > 0)\n      {\n         hasFoundAnError = false;\n\n         for (iTest = 0; iTest < submission.tests.length; iTest++)\n         {\n            curTest = submission.tests[iTest];\n            if (!curTest.cached) // We set it\n            {\n               curTest.cached = {};\n               if (submissionManager.getStatusTest(curTest.iErrorCode) != 'ok' && !hasFoundAnError)\n               {\n                  curTest.cached.isShown = true;\n                  hasFoundAnError = true;\n                  idApplied = curTest.ID;\n               }\n               else\n               {\n                  curTest.cached.isShown = false;\n               }\n            }\n            else // Otherwise, it is already set.\n            {\n               hasFoundAnError = true;\n            }\n         }\n\n         if (!hasFoundAnError)\n         {\n            submission.tests[0].cached.isShown = true;\n            idApplied = submission.tests[0].ID;\n         }\n      }\n\n      return idApplied;\n   };\n\n   $scope.configureLogsError = function(tests)\n   {\n      for (var iTest = 0; iTest < tests.length; iTest++)\n      {\n         var dataITest = tests[iTest];\n         if (submissionManager.getStatusTest(dataITest.iErrorCode) == 'error' || submissionManager.getStatusTest(dataITest.iErrorCode) == 'errorNoLog')\n         {\n            $scope.displayError(dataITest.ID);\n         }\n      }\n   };\n\n   function getDiffHtmlFromLines(src, dst) {\n      // No longer used\n      if (src == '') return '';\n      if (dst == '') return '<span class=\"errorInLog\">'+src+'</span>';\n      var indexStart = -1;\n      var indexStop = -1;\n      var i, idest;\n      for (i = 0; i < src.length; i++) {\n         if (i >= dst.length) {\n            return src;\n         }\n         if (src[i] != dst[i]) {\n            indexStart = i;\n            break;\n         }\n      }\n      if (indexStart == -1) {\n         return src;\n      }\n      for (i = src.length-1; i >= 0; i--) {\n         idest = i + dst.length - src.length;\n         if (idest < 0 || src[i] != dst[idest]) {\n            indexStop = i;\n            break;\n         }\n      }\n      if (indexStop == -1) {\n         indexStop = src.length-1;\n      }\n      if (indexStop < indexStart) {\n         console.error('ho ho...');\n         return src;\n      }\n      var res = src.substring(0,indexStart);\n      res += '<span class=\"errorInLog\">';\n      res += src.substring(indexStart, indexStop+1);\n      res += '</span>';\n      res += src.substring(indexStop+1);\n      return res;\n   }\n\n   // The following function defines the behavior for the default log format. See\n   // the documentation of taskgrader for more information.\n   function getDiffHtmlFromLog(log) {\n      if (!log) {\n         return '';\n      }\n      resSol = '';\n      resExp = '';\n      if (log.excerptRow > 1) {\n         resSol += '...\\n';\n         resExp += '...\\n';\n      }\n      var iRow;\n      var realdiffRow = log.diffRow - log.excerptRow;\n      var rowsSol = log.displayedSolutionOutput.split('\\n');\n      var rowsExp = log.displayedExpectedOutput.split('\\n');\n\n      // Rows before the diff\n      for (iRow = 0; iRow < realdiffRow; iRow++) {\n         resSol += rowsSol[iRow]+'\\n';\n         resExp += rowsSol[iRow]+'\\n';\n      }\n\n      // Row with the diff\n      var diffRowSol = realdiffRow < rowsSol.length ? rowsSol[realdiffRow] : '';\n      var diffCol = log.diffCol-1\n      // Highlight only the first different character\n      if (diffCol < diffRowSol.length) {\n         resSol += diffRowSol.substring(0, diffCol);\n         resSol += '<span class=\"errorInLog\">';\n         resSol += diffRowSol.substring(diffCol, diffCol+1);\n         resSol += '</span>';\n         resSol += diffRowSol.substring(diffCol+1);\n      } else {\n         // There is no character in the solution on that position, we add a space\n         resSol += diffRowSol;\n         resSol += '<span class=\"errorInLog\">&nbsp;</span>';\n      }\n      resSol += '\\n';\n      resExp += realdiffRow < rowsExp.length ? (rowsExp[realdiffRow]+'\\n') : '';\n\n      // Rows after the diff\n      for (iRow = realdiffRow+1; iRow < Math.max(rowsSol.length, rowsExp.length); iRow++) {\n         resSol += iRow < rowsSol.length ? (rowsSol[iRow]+'\\n') : '';\n         resExp += iRow < rowsExp.length ? (rowsExp[iRow]+'\\n') : '';\n      }\n\n      if (log.truncatedAfter) {\n         resSol += '... ';\n         resExp += '... ';\n      }\n      res =  'Votre programme a affiché :<br>\\n';\n      res += '<pre>'+resSol+'</pre>';\n      res += 'alors que la réponse attendue était :<br>\\n';\n      res += '<pre>'+resExp+'</pre>';\n      res += 'Pour vous aider, le premier caractère différent est mis sur fond rouge.<br><br>Vérifiez bien que vous affichez exactement ce qui est demandé et rien de plus. Vérifiez aussi les retours à la ligne.';\n      return res;\n   }\n\n   $scope.getLog = function(curTest) {\n      var evalFun = curTest.submission.task.displayChecker;\n      if (evalFun) {\n         return evalFun(curTest);\n      }\n      var sLog = curTest.sLog;\n      try {\n         var sLogParsed = JSON.parse(sLog);\n      } catch (e) {\n         return 'Message d\\'évaluation :<pre>'+sLog+'</pre>';\n      }\n      return getDiffHtmlFromLog(sLogParsed);\n   };\n\n   $scope.round = function(val)\n   {\n      return Math.round(val);\n   };\n\n   $scope.floor = function(val)\n   {\n      return Math.floor(val);\n   };\n\n   $scope.firstCharDiff = function(inputStr, expectedStr)\n   {\n      var result = \"\";\n      var hasFoundError = false;\n      for (var pos = 0; pos < inputStr.length; pos++)\n      {\n         if (inputStr[pos] == expectedStr[pos] || hasFoundError)\n         {\n            result += inputStr[pos];\n         }\n         else\n         {\n            result += \"<span class=\\\"charDiff\\\">\" + inputStr[pos] + \"</span>\";\n            hasFoundError = true;\n         }\n      }\n      return result;\n   };\n\n   $scope.formatDate = function(date) // Not used\n   {\n      var months = [];\n      months.Jan = \"01\";\n      months.Feb = \"02\";\n      months.Mar = \"03\";\n      months.Apr = \"04\";\n      months.May = \"05\";\n      months.Jun = \"06\";\n      months.Jul = \"07\";\n      months.Aug = \"08\";\n      months.Sep = \"09\";\n      months.Oct = \"10\";\n      months.Nov = \"11\";\n      months.Dec = \"12\";\n\n      date = date.toString();\n      date = date.split(' ');\n\n      var dayData = date[4].split(':');\n\n      var str = date[2] + \"/\" + months[date[1]] + \"/\" + date[3] + \" à \" + dayData[0] + ':' + dayData[1];\n      return str;\n   };\n\n   $scope.getImageAbsoluteUrl = function(idTask, md5, imageName)\n   {\n      return 'http://data.france-ioi.org/' + idTask + '/' + md5 + '/' + imageName;\n   };\n\n   $scope.toLog = function (str) // Debug function - to remove later\n   {\n      console.log(str);\n   };\n\n   $scope.clickTest = function(idTest)\n   {\n      var arg = [idTest];\n      $scope.$broadcast(\"clickOnTest\", arg);\n   };\n}]);\n","function createInstance(name, commands, options) {\n   /*var tag = \"#\" + name;\n   $(tag).replaceWith($('#simuTemplate').clone().css('display', 'block').attr('id', $(tag).attr('id')));*/\n   return new simulationInstance(tag, animationFeatures(tag), commands);\n}\n\nfunction simulationInstance(selector, task, commands) {\n   'use strict';\n   //alert(selector);\n   var isMutable = false;\n   var mutableCallBack = null;\n   var curCmd = 0;\n   var textDisplayed = false;\n   var playModes = {\n      stopped: 0,\n      playing: 1,\n      paused: 2\n   };\n   var playMode = playModes.stopped;\n\n   ///// Setters /////\n   // Can the simulation be modified ?\n   var setMutable = function(val, cb) {\n      isMutable = val;\n      if (val)\n         $(\"#lineRoad td\", selector).addClass(\"mutable\");\n      else\n         $(\"#lineRoad td\", selector).removeClass(\"mutable\");\n         \n      if (typeof cb != \"undefined\") {\n         mutableCallBack = function() {\n            cb(task.getInput());\n         };\n         mutableCallBack();\n      }\n   };\n \n   var execCmd = function(cmd, cb) {\n       \n      var cmdName = cmd[0];\n      var cmdArgs = cmd.slice(1);\n      if (cmdName == \"printText\") {\n         var pre = $(\".textOutput\", selector);\n         if (!textDisplayed) {\n            textDisplayed = true;\n            pre.html(\"Texte affiché par votre programme :\\n\");\n            pre.show();\n         }\n         pre.html(pre.html() + cmdArgs[0] + \"<br/>\");\n         cb();\n      } else {\n         \n         if (!task[cmdName]) {\n            alert(\"Internal error : unknown command: '\" + cmdName + \"'\");\n            return;\n         }\n         task[cmdName](cmdArgs, cb);\n         //alert(\"in\");\n      }\n   };\n\n   var execNextCmd = function() {\n      if (playMode == playModes.stopped) {\n         return;\n      }\n      if (curCmd >= commands.length) {\n         return;\n      }\n      var cmd = commands[curCmd];\n      curCmd++;\n      if (curCmd >= commands.length) {\n         $(selector + \" .play, \" + selector + \" .pause\").attr('disabled', 'disabled');\n      }\n      var cb = execNextCmd;\n      if (playMode == playModes.paused) {\n         cb = $.noop;\n      }\n      execCmd(cmd, cb);\n   };\n\n   if (typeof commands == \"string\") {\n      commands = $.parseJSON(commands);\n   }\n   while (curCmd < commands.length) {\n      var cmd = commands[curCmd];\n      curCmd++;\n      execCmd(cmd, $.noop);\n      if (cmd[0] == \"startSimu\") {\n         break;\n      }\n   }\n   \n   \n   var startCmd = curCmd;\n   $(selector + \" .play\").click(function () {\n      if (playMode != playModes.playing) {\n         playMode = playModes.playing;\n         execNextCmd();\n      }\n   });\n   $(selector + \" .pause\").click(function() {\n      playMode = playModes.paused;\n      execNextCmd();\n   });\n   $(selector + \" .restart\").click(function() {\n      if (playMode != playModes.stopped) {\n         textDisplayed = false;\n         $(\".textOutput\", selector).hide();\n         $(selector + \" .play, \" + selector + \" .pause\").removeAttr('disabled');\n         playMode = playModes.stopped;\n         curCmd = startCmd;\n         $(selector).find().stop();\n         task.displayMsg([\"\"], $.noop);\n         task.stop($.noop);\n      }\n   });\n}\n","var submissionManager = {\n   errorCode: {},\n   initConstants: function($scope)\n   {\n      // Returned by the evaluation servers\n      this.errorCode.ERROR_NoError = 0;\n      this.errorCode.ERROR_WrongAnswer = 1;\n      this.errorCode.ERROR_AbortError = 6;\n      this.errorCode.ERROR_BusError = 7;\n      this.errorCode.ERROR_FloatingPointException = 8;\n      this.errorCode.ERROR_SegFault = 11;\n      this.errorCode.ERROR_TimeLimitExceeded = 137;\n\n      // Use locally\n      this.errorCode.ERROR_TimeLimitExceededBis = 9;\n      this.errorCode.ERROR_WrongAnswerBis = 2;\n      this.errorCode.ERROR_ExecutionError = 3;\n      this.errorCode.ERROR_WrongAnswerCheck = 4;\n\n      // Not used anymore\n      this.errorCode.ERROR_StaticMemoryExceeded = 10;\n      this.errorCode.ERROR_BusError35 = 35;\n      this.errorCode.ERROR_SegFault139 = 139;\n\n      // Not used in DB, only here\n      this.errorCode.ERROR_RelativeScore = 150;\n\n      // Returned by the evaluation servers\n      $scope.ERROR_NoError = 0;\n      $scope.ERROR_WrongAnswer = 1;\n      $scope.ERROR_AbortError = 6;\n      $scope.ERROR_BusError = 7;\n      $scope.ERROR_FloatingPointException = 8;\n      $scope.ERROR_SegFault = 11;\n      $scope.ERROR_TimeLimitExceeded = 137;\n\n      // Use locally\n      $scope.ERROR_TimeLimitExceededBis = 9;\n      $scope.ERROR_WrongAnswerBis = 2;\n      $scope.ERROR_ExecutionError = 3;\n      $scope.ERROR_WrongAnswerCheck = 4;\n\n      // Not used anymore\n      $scope.ERROR_StaticMemoryExceeded = 10;\n      $scope.ERROR_BusError35 = 35;\n      $scope.ERROR_SegFault139 = 139;\n\n      // Not used in DB, only here\n      $scope.ERROR_RelativeScore = 150;\n   },\n\n   countSubtasksSucceeded : function(submission)\n   {\n      var nbSubtasksSucceeded = 0;\n      for (var curSubtask = 0; curSubtask < submission.submissionSubtasks.length; curSubtask++)\n      {\n         if (submission.submissionSubtasks[curSubtask].bSuccess)\n         {\n            nbSubtasksSucceeded++;\n         }\n      }\n\n      return nbSubtasksSucceeded;\n   },\n\n   getDataTest : function(iErrorCode)\n   {\n      var res = null;\n      switch (iErrorCode)\n      {\n         case this.errorCode.ERROR_NoError:\n            res = {\n               status: 'ok',\n               classToApply: 'succeed_test',\n               classImage: 'glyphicon glyphicon-ok image_succeed_test',\n            };\n            break;\n         case this.errorCode.ERROR_WrongAnswer:\n         case this.errorCode.ERROR_WrongAnswerBis:\n            res = {\n               status: 'error',\n               classToApply: 'error_test',\n               classImage: 'glyphicon glyphicon-remove image_error_test',\n            };\n            break;\n         case this.errorCode.ERROR_WrongAnswerCheck:\n            res = {\n               status: 'errorNoLog',\n               classToApply: 'error_test',\n               classImage: 'glyphicon glyphicon-remove image_error_test',\n            };\n            break;\n         case this.errorCode.ERROR_AbortError:\n            res = {\n               status: 'abort',\n               classToApply: 'crash_test',\n               classImage: 'glyphicon glyphicon-fire image_crash_test',\n               };\n            break;\n         case this.errorCode.ERROR_BusError:\n         case this.errorCode.ERROR_BusError35:\n            res = {\n               status: 'busError',\n               classToApply: 'crash_test',\n               classImage: 'glyphicon glyphicon-fire image_crash_test',\n               };\n            break;\n         case this.errorCode.ERROR_FloatingPointException:\n            res = {\n               status: 'floatingPointException',\n               classToApply: 'crash_test',\n               classImage: 'glyphicon glyphicon-fire image_crash_test',\n               };\n            break;\n         /* Seg fault <=> memory problem */\n         case this.errorCode.ERROR_SegFault:\n         case this.errorCode.ERROR_StaticMemoryExceeded:\n         case this.errorCode.ERROR_SegFault139:\n            res = {\n               status: 'memory',\n               classToApply: 'crash_test',\n               classImage: 'glyphicon glyphicon-fire image_crash_test',\n               };\n            break;\n         case this.errorCode.ERROR_TimeLimitExceeded:\n         case this.errorCode.ERROR_TimeLimitExceededBis:\n            res = {\n               status: 'timeout',\n               classToApply: 'timeout_test',\n               classImage: 'glyphicon glyphicon-time image_timeout_test',\n            };\n            break;\n         case this.errorCode.ERROR_RelativeScore:\n            res = {\n               status: 'relative',\n               classToApply: 'relative_test',\n               classImage: 'glyphicon glyphicon-ok image_relative_test',\n            };\n            break;\n      }\n      return res;\n   },\n\n   getStatusTest: function(iErrorCode)\n   {\n      return submissionManager.getDataTest(iErrorCode).status;\n   },\n\n   getClassTest: function(iErrorCode)\n   {\n      return submissionManager.getDataTest(iErrorCode).classToApply;\n   },\n\n   getClassImageTest: function(iErrorCode)\n   {\n      //alert(submissionManager.getDataTest(iErrorCode).classImage);\n      return submissionManager.getDataTest(iErrorCode).classImage;\n   }\n};\n","angular.module(\"submission-manager\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"submission-manager/anim.html\",\"<div id=\\\"anim{{idtest}}\\\">\\n\t<div style=\\\"text-align:center\\\">\\n\t   <!-- The place to do the simulation -->\\n\t   <div class=\\\"simuShow\\\">\\n\t   </div>\\n\t   <!-- The place to display texte -->\\n\t   <div class=\\\"simuMsg\\\">   \\n\t   </div>\\n\t   <!-- Toolbar -->\\n\t   <div class=\\\"simuToolbar\\\">\\n\t\t  <!--<input type=\\\"button\\\" class=\\\"play\\\" value=\\\"Exécuter tout\\\" />\\n\t\t  <input type=\\\"button\\\" class=\\\"pause\\\" value=\\\"Exécuter une étape\\\" />\\n\t\t  <input type=\\\"button\\\" class=\\\"restart\\\" value=\\\"Recommencer\\\" />-->\\n        <button href=\\\"#\\\" class=\\\"play btn btn-default\\\">Exécuter tout</button>\\n        <button href=\\\"#\\\" class=\\\"pause btn btn-default\\\">Exécuter une étape</button>\\n        <button href=\\\"#\\\" class=\\\"restart btn btn-default\\\">Recommencer</button>\\n\t   </div>\\n\t   <pre class=\\\"textOutput\\\" style=\\\"display:none;background:#C0C0C0;text-align:left\\\">\\n\t   </pre>\\n\t</div>\\n</div>\\n\");\n$templateCache.put(\"submission-manager/header_template.html\",\"<div class=\\\"submission\\\" ng-if=\\\"!loading\\\">\\n   <span class=\\\"submission_span submission_info\\\">\\n      <span class=\\\"glyphicon glyphicon-refresh glyphicon-refresh-animate image_loading checkImage\\\" ng-show=\\\"!submission.bEvaluated\\\"></span>\\n      <span class=\\\"glyphicon glyphicon-ok image_succeed_task checkImage\\\" ng-show=\\\"submission.bEvaluated && submission.bSuccess\\\"></span>\\n      <span class=\\\"glyphicon glyphicon-remove image_failure_task checkImage\\\" ng-show=\\\"submission.bEvaluated && !submission.bSuccess\\\"></span>\\n      <span ng-show=\\\"submission.bEvaluated\\\">\\n         Soumission en {{submission.sourceCode.params.sLangProg}}\\n         le {{submission.sDate | date:\\'dd/MM/yyyy à HH:mm\\'}}\\n      </span>\\n      <span ng-show=\\\"!submission.bEvaluated\\\">\\n         Soumission en cours d\\'évaluation...\\n      </span>\\n   </span>\\n\\n   <span class=\\\"submission_span submission_data\\\"> <!-- centered data -->\\n   </span>\\n   <span class=\\\"submission_span score\\\" ng-if=\\\"submission.bEvaluated\\\">Score : {{submission.iScore}} %</span>\\n   <span class=\\\"submission_span score\\\" ng-if=\\\"!submission.bEvaluated\\\">Évaluation en cours...</span>\\n\\n   <br>\\n\\n   <span class=\\\"submission_details\\\" ng-if=\\\"submission.bEvaluated\\\">\\n      <span ng-if=\\\"submission.submissionSubtasks.length > 0\\\">Sous-tâches validées : {{submissionManager.countSubtasksSucceeded(submission)}} / {{submission.submissionSubtasks.length}}</span>\\n      <span ng-if=\\\"submission.submissionSubtasks.length == 0\\\">Test validés : {{submission.nbTestsPassed}} / {{submission.nbTestsTotal}}</span>\\n      &nbsp;&nbsp;\\n      <span class=\\\"submission_min_test disp_min\\\" ng-if=\\\"!submission.submissionSubtasks\\\" ng-repeat=\\\"curTest in submission.tests\\\" ng-include src=\\\"\\'submission-manager/view_test_min.html\\'\\\"></span>\\n      <span class=\\\"submission_min_test\\\" ng-if=\\\"submission.submissionSubtasks\\\" ng-repeat=\\\"submissionSubtask in submission.submissionSubtasks\\\">\\n        <span ng-repeat=\\\"curTest in submissionSubtask.submissionTests\\\" ng-include src=\\\"\\'submission-manager/view_test_min.html\\'\\\"  class=\\\"disp_min\\\"></span>\\n        &nbsp;&nbsp;\\n      </span>\\n   </span>\\n </div>\\n\");\n$templateCache.put(\"submission-manager/image_test.html\",\"<span ng-if=\\\"curTest.iScore == 0 || curTest.iScore == 100\\\" class=\\\"{{submissionManager.getClassImageTest(curTest.iErrorCode)}}\\\"></span>\\n<span ng-if=\\\"!(curTest.iScore == 0 || curTest.iScore == 100)\\\" class=\\\"{{submissionManager.getClassImageTest(ERROR_RelativeScore)}}\\\"></span>\\n\");\n$templateCache.put(\"submission-manager/submission.html\",\"<div class=\\\"submission_global\\\">\\n   <div ng-if=\\\"submission != undefined\\\" ng-hide=\\\"loading\\\">\\n      <uib-accordion close-others=\\\"false\\\">\\n         <uib-accordion-group is-open=\\\"showSubmission\\\">\\n            <uib-accordion-heading>\\n               <div ng-include src=\\\"\\'submission-manager/header_template.html\\'\\\"></div>\\n            </uib-accordion-heading>\\n            <div ng-if=\\\"submission != undefined && !submission.bEvaluated && !loading\\\" class=\\\"submission_global\\\">\\n               <div class=\\\"submission_error\\\">\\n                  <p>\\n                    Cette soumission est en train d\\'être évaluée.\\n                  </p>\\n               </div>\\n            </div>\\n            <div ng-if=\\\"submission.bEvaluated\\\">\\n               <div ng-show=\\\"submission.bCompilError\\\" class=\\\"submission_error\\\">\\n                  <strong>Erreur de compilation :</strong><br />\\n                  <pre>{{submission.sCompilMsg}}</pre>\\n               </div>\\n\\n               <div ng-show=\\\"!(submission.tests.length > 0) && !submission.bCompilError && submission.bEvaluated\\\" class=\\\"submission_error\\\">\\n                  <p>\\n                     Il n\\'existe pas de tests pour ce problème.\\n                  </p>\\n               </div>\\n               <div ng-hide=\\\"!submission.bEvaluated || submission.bCompilError\\\" ng-if=\\\"submission.tests.length > 0\\\">\\n                  <div ng-if=\\\"submission.sCompilMsg.length > 0\\\" class=\\\"compil_error\\\">\\n                     Résultat de la compilation :\\n                     <pre>{{submission.sCompilMsg}}</pre>\\n                  </div>\\n                  <div ng-if=\\\"submission.submissionSubtasks.length > 0\\\">\\n                     <uib-accordion close-others=\\\"true\\\">\\n                        <uib-accordion-group ng-repeat=\\\"submissionSubtask in submission.submissionSubtasks\\\" class=\\\"subtask_global\\\" is-open=\\\"submissionSubtask.cached.showDetailsTests\\\">\\n                           <div ng-include src=\\\"\\'submission-manager/view_subtask.html\\'\\\"></div>\\n                        </uib-accordion-group>\\n                     </uib-accordion>\\n                  </div>\\n                  <div class=\\\"test\\\" ng-if=\\\"submission.submissionSubtasks.length == 0\\\">\\n                     <uib-accordion close-others=\\\"true\\\">\\n                        <uib-accordion-group ng-repeat=\\\"curTest in submission.tests | orderBy : curTest.iRank\\\" is-open=\\\"curTest.cached.isShown\\\">\\n                           <div ng-include src=\\\"\\'submission-manager/view_test.html\\'\\\"></div>\\n                        </uib-accordion-group>\\n                     </uib-accordion>\\n                  </div>\\n               </div> <!-- End tests -->\\n            </div>\\n         </uib-accordion-group>\\n      </uib-accordion>\\n   </div> <!-- End submission details -->\\n</div> <!-- End submission -->\\n\");\n$templateCache.put(\"submission-manager/view_subtask.html\",\"<uib-accordion-heading>\\n   <div class=\\\"subtask\\\">\\n      <span class=\\\"subtask_name\\\">\\n         <span class=\\\"glyphicon glyphicon-ok image_succeed_subtask\\\" ng-show=\\\"submissionSubtask.bSuccess\\\"></span>\\n         <span class=\\\"glyphicon glyphicon-remove image_failure_subtask\\\" ng-show=\\\"!submissionSubtask.bSuccess\\\"></span>\\n         {{submissionSubtask.subtask_name}}\\n      </span>\\n\\n      <span class=\\\"subtask_data\\\">\\n         <span>\\n            Tests validés : {{countTestsSucceeded(submissionSubtask)}} / {{submissionSubtask.submissionTests.length}}\\n            <span class=\\\"subtask_min_test\\\">\\n               <span ng-repeat=\\\"curTest in submissionSubtask.submissionTests\\\" ng-include src=\\\"\\'submission-manager/view_test_min.html\\'\\\"  class=\\\"disp_min\\\"></span>\\n            </span>\\n         </span>\\n      </span>\\n\\n      <span class=\\\"score\\\">\\n         Score : {{round(submissionSubtask.iScore * submissionSubtask.subtask_iPointsMax / 100)}} / {{submissionSubtask.subtask_iPointsMax}}\\n      </span>\\n   </div>\\n</uib-accordion-heading>\\n\\n<div class=\\\"test\\\">\\n   <uib-accordion close-others=\\\"true\\\">\\n      <uib-accordion-group ng-repeat=\\\"curTest in submissionSubtask.submissionTests | orderBy : curTest.iRank\\\" is-open=\\\"curTest.cached.isShown\\\">\\n         <div ng-include src=\\\"\\'submission-manager/view_test.html\\'\\\"></div>\\n      </uib-accordion-group>\\n   </uib-accordion>\\n</div>\\n\");\n$templateCache.put(\"submission-manager/view_test.html\",\"<uib-accordion-heading>\\n   <p ng-click=\\\"clickTest(curTest.ID)\\\" ng-if=\\\"curTest.iScore > 0 && curTest.iScore < 100\\\" class=\\\"heading_test\\\"> <!-- i.e relative score -->\\n      <span class=\\\"idTest\\\">\\n         <span ng-include src=\\\"\\'submission-manager/image_test.html\\'\\\" class=\\\"imageTest\\\"></span>\\n         <span ng-if=\\\"curTest.test_sGroupType == \\'Evaluation\\'\\\">Test n°{{$index+1}} &nbsp; &nbsp;</span>\\n         <span ng-if=\\\"curTest.test_sGroupType !== \\'Evaluation\\'\\\">{{curTest.test_sName}} &nbsp; &nbsp;</span>\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(ERROR_RelativeScore)}}\\\">\\n         Score partiel de {{curTest.iScore}}% en {{floor(curTest.iTimeMs/10)/100}} s\\n      </span>\\n   </p>\\n   <p ng-click=\\\"clickTest(curTest.ID)\\\" ng-if=\\\"!(curTest.iScore > 0 && curTest.iScore < 100)\\\" ng-switch=\\\"submissionManager.getStatusTest(curTest.iErrorCode)\\\" class=\\\"heading_test\\\">\\n      <span class=\\\"idTest\\\">\\n         <span ng-include src=\\\"\\'submission-manager/image_test.html\\'\\\" class=\\\"imageTest\\\"></span>\\n         <span ng-if=\\\"curTest.test_sGroupType == \\'Evaluation\\'\\\">Test n°{{$index+1}} &nbsp; &nbsp;</span>\\n         <span ng-if=\\\"curTest.test_sGroupType !== \\'Evaluation\\'\\\">{{curTest.test_sName}} &nbsp; &nbsp;</span>\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(curTest.iErrorCode)}}\\\" ng-switch-when=\\\"ok\\\">\\n         Réponse correcte en {{floor(curTest.iTimeMs/10)/100}} s\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(curTest.iErrorCode)}}\\\" ng-switch-when=\\\"error\\\">\\n         Réponse incorrecte\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(curTest.iErrorCode)}}\\\" ng-switch-when=\\\"errorNoLog\\\">\\n         Erreur dans le résultat\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(curTest.iErrorCode)}}\\\" ng-switch-when=\\\"abort\\\">\\n         Abort\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(curTest.iErrorCode)}}\\\" ng-switch-when=\\\"busError\\\">\\n         Bus Error\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(curTest.iErrorCode)}}\\\" ng-switch-when=\\\"floatingPointExpression\\\">\\n         Floating point Expression\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(curTest.iErrorCode)}}\\\" ng-switch-when=\\\"memory\\\">\\n         Accès mémoire invalide\\n      </span>\\n      <span class=\\\"resultTest {{submissionManager.getClassTest(curTest.iErrorCode)}}\\\" ng-switch-when=\\\"timeout\\\">\\n         Limite de temps dépassée\\n      </span>\\n   </p>\\n\\n</uib-accordion-heading>\\n<!--<td ng-switch=\\\"curTest.iErrorCode\\\">-->\\n\\n<div ng-if=\\\"curTest.iScore > 0 && curTest.iScore < 100\\\" class=\\\"output\\\"> <!-- i.e relative score -->\\n   Vous avez obtenu un score partiel. Vous pouvez améliorer votre programme pour augmenter votre score.\\n   <div ng-if=\\\"curTest.sLog || curTest.jFiles\\\">\\n      <div ng-bind-html=\\\"toTrust(getLog(curTest))\\\"></div>\\n   </div>\\n</div>\\n\\n<div ng-if=\\\"curTest.sLog != \\'\\' && hasLoadedAnimation\\\" class=\\\"output\\\" animation commands=\\\"curTest.sLog\\\" idtest=\\\"curTest.ID\\\"></div>\\n\\n<div ng-if=\\\"!(curTest.iScore > 0 && curTest.iScore < 100) && !(curTest.sOutput != \\'\\' && hasLoadedAnimation)\\\" class=\\\"output\\\">\\n   <div ng-switch=\\\"submissionManager.getStatusTest(curTest.iErrorCode)\\\">\\n      <span ng-switch-when=\\\"ok\\\">\\n         Bravo, votre programme a validé ce test.\\n      </span>\\n      <span ng-switch-when=\\\"error\\\">\\n         <span ng-if=\\\"displayError(curTest.ID) && curTest.sOutput.length == 0\\\"> <!-- We use datas in tm_submissions to display log errors if there\\'s nothing in tm_submissions_tests -->\\n            Votre programme a renvoyé :<br/>\\n            <pre class=\\\"log\\\">{{submission.sFirstUserOutput}}</pre>\\n\\n            Il aurait dû renvoyer :<br/>\\n            <pre class=\\\"log\\\">{{submission.sFirstExpectedOutput}}</pre>\\n\\n            <span ng-show=\\\"curTest.iErrorCode == ERROR_WrongAnswer\\\"> <!-- diff shall not be shown when iErrorCode = ERROR_WrongAnswerBis -->\\n               Pour vous aider, voici le premier caractère différent : <br />\\n               <pre class=\\\"log\\\" ng-bind-html=\\\"toTrust(firstCharDiff(submission.sFirstUserOutput, submission.sFirstExpectedOutput))\\\"></pre>\\n            </span>\\n         </span>\\n         <span ng-if=\\\"displayError(curTest.ID) && curTest.sOutput.length > 0\\\"> <!-- Otherwise, we use datas in tm_submissions_tests -->\\n            Votre programme a renvoyé :<br/>\\n            <pre class=\\\"log\\\">{{curTest.sOutput}}</pre>\\n\\n            Il aurait dû renvoyer :<br/>\\n            <pre class=\\\"log\\\">{{curTest.sExpectedOutput}}</pre>\\n            <span ng-show=\\\"curTest.iErrorCode == ERROR_WrongAnswer\\\"> <!-- diff shall not be shown when iErrorCode = ERROR_WrongAnswerBis -->\\n               Pour vous aider, voici le premier caractère différent : <br />\\n               <pre class=\\\"log\\\" ng-bind-html=\\\"toTrust(firstCharDiff(curTest.sOutput, curTest.sExpectedOutput))\\\"></pre>\\n            </span>\\n         </span>\\n         <span ng-if=\\\"!displayError(curTest.ID) && !curTest.sLog && !curTest.jFiles && !curTest.sErrorMsg\\\">\\n            Aucun log n\\'est disponible pour ce test.\\n         </span>\\n      </span>\\n      <span ng-switch-when=\\\"errorNoLog\\\">\\n         <pre ng-show=\\\"displayError(curTest.ID) && curTest.sOutput.length > 0\\\" class=\\\"log\\\">{{curTest.sOutput}}</pre>\\n      </span>\\n      <span ng-switch-when=\\\"abort\\\">\\n         Votre programme a retourné un <code>Abort</code>.\\n         En C++, il peut s\\'agir d\\'une exception non traitée par votre programme.\\n      </span>\\n      <span ng-switch-when=\\\"busError\\\">\\n         Votre programme a retourné un <code>Bus Error</code>.\\n         Il peut s\\'agir d\\'un problème lié à l\\'utilisation de pointeurs.\\n      </span>\\n      <span ng-switch-when=\\\"floatingPointExpression\\\">\\n         Votre programme s\\'est terminé par un <code>floating point exception</code>.\\n         Il a probablement tenté d\\'effectuer une division par zéro.\\n      </span>\\n      <span ng-switch-when=\\\"memory\\\">\\n         Votre programme a échoué à la suite d\\'un accès mémoire en dehors des zones réservées, ou d\\'un dépassement de la limite de mémoire.<br />\\n         Votre programme s\\'est terminé à la suite d\\'une erreur. Cela peut venir d\\'une des raisons suivantes :\\n         <ul>\\n            <li>Votre programme a dépassé la limite de mémoire autorisée pour ce problème, que ce soit sous la forme de variables statiques, d\\'allocations dynamiques, ou bien de la pile.</li>\\n            <li>Votre programme a tenté de faire un accès mémoire en dehors des zones allouées.</li>\\n         </ul>\\n      </span>\\n      <span ng-switch-when=\\\"timeout\\\">\\n         Votre programme a dépassé la limite de temps.<br />\\n         Cela peut venir de deux raisons :\\n         <ul>\\n            <li>soit il est trop lent pour passer ce test dans la limite de temps du sujet.</li>\\n            <li>soit il boucle indéfiniment et ne se termine jamais.</li>\\n         </ul>\\n      </span>\\n      <span ng-switch-default>\\n         Un problème a eu lieu lors de la récupération des informations concernant le test.\\n      </span>\\n   </div>\\n   <div ng-if=\\\"curTest.sErrorMsg\\\">\\n      Message d\\'erreur renvoyé à l\\'évaluation :\\n      <pre>{{curTest.sErrorMsg}}</pre>\\n   </div>\\n   <div ng-if=\\\"curTest.sLog || curTest.jFiles\\\">\\n      <div ng-bind-html=\\\"toTrust(getLog(curTest))\\\"></div>\\n   </div>\\n</div>\\n\");\n$templateCache.put(\"submission-manager/view_test_min.html\",\"<span ng-if=\\\"curTest.iScore == 0 || curTest.iScore == 100\\\" class=\\\"imageTest\\\" ng-class=\\\"submissionManager.getClassImageTest(curTest.iErrorCode)\\\"></span>\\n<span ng-if=\\\"!(curTest.iScore == 0 || curTest.iScore == 100)\\\" class=\\\"imageTest\\\" ng-class=\\\"submissionManager.getClassImageTest(ERROR_RelativeScore)\\\"></span>\\n\");}]);"],"sourceRoot":"/source/"}